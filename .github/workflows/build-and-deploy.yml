name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for proper timestamps

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Install Node.js for Pagefind
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and run Pagefind
        run: |
          npm install -g pagefind
          pagefind --source _site --glob "**/*.html" --exclude-selectors "nav, footer, .pagination, .comments-section" --bundle-dir _site/pagefind
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Lighthouse CI job (optional)
  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: |
          echo "Deployment URL: ${{ needs.deploy.outputs.page_url }}"
          sleep 30 # Wait 30 seconds for deployment to be ready

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
            ${{ needs.deploy.outputs.page_url }}/2024/09/10/welcome-to-the-blog/
          configPath: './lighthouserc.json'
          temporaryPublicStorage: true